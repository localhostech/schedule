var schedule = {
	'–ø–Ω': [
		['–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ 1-105', '–§–∏–ª–æ—Å–æ—Ñ–∏—è 1-513', '–•–∏–º–∏—è 1-522']
	],
	'–≤—Ç': [
		['–§–∏–∑–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ', '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ 1-420', '–ë–ñ–î 3-502', '–†–Ø–∏–ö–† 1-106']
	],
	'—Å—Ä': [
		['–•–∏–º–∏—è 3-3', '–≠–∫–æ–Ω–æ–º–∏–∫–∞ 7-503', '–§–∏–ª–æ—Å–æ—Ñ–∏—è 1-2', '–≠–∫–æ–Ω–æ–º–∏–∫–∞ 3-3']
	],
	'—á—Ç': [
		['–§–∏–∑–≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ']
	],
	'–ø—Ç': [
		['–ê–Ω–≥–ª–∏–π—Å–∫–∏–π - 7-213, –ù–µ–º–µ—Ü–∫–∏–π - 7-419', '–ò–¢ 1 –≥—Ä—É–ø–ø–∞ 3-410', '–ò–¢ 1 –≥—Ä—É–ø–ø–∞ 3-410', '–ò–¢ (–ª–µ–∫) 3-410']
	]
}
function getWeekDay(date) {
  var days = ['–≤—Å', '–ø–Ω', '–≤—Ç', '—Å—Ä', '—á—Ç', '–ø—Ç', '—Å–±'];

  return days[date.getDay()+1];
}

var apiai = require('apiai');

var app = apiai("6e7a7d2654d548b587eb9658ed5a2ac0"); 

const {VKApi, ConsoleLogger, BotsLongPollUpdatesProvider} = require('node-vk-sdk');

let api = new VKApi({
    token: '87b2feba4e2592a00d170265da4f46492fb13abfcfbd3265f22914b71dea24d87145b8272d3fc9fef56f8',
    logger: new ConsoleLogger()
});

let updatesProvider = new BotsLongPollUpdatesProvider(api, '170828570');
var keyboard = {"one_time": false, 
    "buttons": [ 
      [{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"1\"}", 
          "label": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" 
        }, 
        "color": "primary" 
      },{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"2\"}", 
          "label": "–í—Ç–æ—Ä–Ω–∏–∫" 
        }, 
        "color": "primary" 
      },{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"3\"}", 
          "label": "–°—Ä–µ–¥–∞" 
        }, 
        "color": "primary" 
      }], 
      [{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"4\"}", 
          "label": "–ß–µ—Ç–≤–µ—Ä–≥" 
        }, 
        "color": "primary" 
      },{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"5\"}", 
          "label": "–ü—è—Ç–Ω–∏—Ü–∞" 
        }, 
        "color": "primary" 
      },{ 
        "action": { 
          "type": "text", 
          "payload": "{\"button\": \"6\"}", 
          "label": "–°—É–±–±–æ—Ç–∞" 
        }, 
        "color": "primary" 
      }]
    ]}
updatesProvider.getUpdates(updates => {
    console.log('got updates: ', updates)

    if (updates.length > 0) {
      var message = updates[0].object.body;
      var userId = updates[0].object.user_id;
      
      var api_request = app.textRequest(message, {
	    sessionId: userId
	  });

	  api_request.on('response', function(response) {
	    console.log(response);
	    if (response.result.action == 'getLesson' && !response.result.actionIncomplete) {
	    	console.log(response.result.parameters.date);
	    	var date = new Date(response.result.parameters.date); // 3 —è–Ω–≤–∞—Ä—è 2014

	    	var day = getWeekDay(date);

	    	if (schedule[day]) {
	    		var lessons = schedule[day][0];


	    		var lessonStr = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ "+day+": \n\n";

	    		lessonStr += lessons.join(';\n');

	    		lessonStr += "\n\n–Ω–µ–¥–µ–ª—è –Ω–∞–¥ —á–µ—Ä—Ç–æ–π";

	    	} else {
	    		var lessonStr = "–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–µ—Ç üòû. –ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –æ—Ç–¥–æ—Ö–Ω—É—Ç—å?";
	    	}

	    	api.call('messages.send', {'user_id':userId, 'message': lessonStr, keyboard: JSON.stringify(keyboard)})
	    } else {
	    	    api.call('messages.send', {'user_id':userId, 'message': response.result.fulfillment.speech, keyboard: JSON.stringify(keyboard)})
	    }
	    
	  });

	  api_request.on('error', function(error) {
	    console.log(error);
	  });

	  api_request.end();
	  
    }
});

